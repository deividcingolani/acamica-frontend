{"ast":null,"code":"var _jsxFileName = \"/home/admin/Desktop/acamica/client/pages/payments.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from \"../components/Layout\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { PaymentsFilter } from \"../components/payments/Filter\";\n\nconst Payments = props => {\n  const students = props.students;\n  const {\n    0: studentsFilter,\n    1: setstudentsFilter\n  } = useState(props.students);\n  /* This is for build Pagination of table */\n\n  /* Set the actual page */\n\n  const {\n    0: pageActual,\n    1: setpageActual\n  } = useState(1);\n  /* Students per Page */\n\n  let sizePage = 2;\n  /* Numbers of Page */\n\n  let numberPages = students.length / sizePage + 1;\n  let items = [];\n\n  for (let number = 1; number < numberPages; number++) {\n    items.push(__jsx(Pagination.Item, {\n      key: number,\n      active: number === pageActual,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, number));\n  }\n\n  const paginationBasic = __jsx(Pagination, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(Pagination.First, {\n    onClick: () => setpageActual(1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(Pagination.Prev, {\n    onClick: () => pageActual > 1 ? setpageActual(pageActual - 1) : setpageActual(pageActual),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), items, __jsx(Pagination.Next, {\n    onClick: () => {\n      const canNextPage = pageActual < numberPages;\n\n      if (canNextPage) {\n        const nextPage = pageActual + 1;\n        setpageActual(nextPage);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(Pagination.Last, {\n    onClick: () => setpageActual(numberPages),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n\n  const studentsShow = studentsFilter.filter(student => {\n    return student.id > (pageActual - 1) * sizePage && student.id <= pageActual * sizePage;\n  });\n  const studentsRender = studentsShow.map((student, key) => {\n    return __jsx(\"tr\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, student.name), __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, student.paymentDescription), __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, student.dues_value ? student.dues_value : \"-\"), __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, student.email), __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, student.career), __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, student.country), __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, student.city));\n  });\n  return __jsx(Layout, {\n    title: \"Payments of Students\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(PaymentsFilter, {\n    students: students,\n    careers: props.careers,\n    countries: props.countries,\n    setstudents: setstudentsFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Type Payment\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Dues\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Email\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Career\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Country\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"City\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"City\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, studentsRender)), paginationBasic);\n};\n\nPayments.getInitialProps = async function () {\n  const res = await axios.get(\"http://0.0.0.0:8000/api/payments/\");\n  const resCareer = await axios.get(\"http://0.0.0.0:8000/api/students/careers/\");\n  const resCountry = await axios.get(\"http://0.0.0.0:8000/api/students/countries/\");\n  const students = await res.data;\n  const careers = await resCareer.data;\n  const countries = await resCountry.data;\n  return {\n    students,\n    careers,\n    countries\n  };\n};\n\nexport default Payments;","map":{"version":3,"sources":["/home/admin/Desktop/acamica/client/pages/payments.js"],"names":["Layout","axios","useState","Table","Pagination","PaymentsFilter","Payments","props","students","studentsFilter","setstudentsFilter","pageActual","setpageActual","sizePage","numberPages","length","items","number","push","paginationBasic","canNextPage","nextPage","studentsShow","filter","student","id","studentsRender","map","key","name","paymentDescription","dues_value","email","career","country","city","careers","countries","getInitialProps","res","get","resCareer","resCountry","data"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,cAAT,QAA+B,+BAA/B;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCR,QAAQ,CAACK,KAAK,CAACC,QAAP,CAApD;AAEA;;AACA;;AACA,QAAM;AAAA,OAACG,UAAD;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAC,CAAD,CAA5C;AAEA;;AACA,MAAIW,QAAQ,GAAG,CAAf;AAEA;;AACA,MAAIC,WAAW,GAAGN,QAAQ,CAACO,MAAT,GAAkBF,QAAlB,GAA6B,CAA/C;AAEA,MAAIG,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGH,WAA9B,EAA2CG,MAAM,EAAjD,EAAqD;AACnDD,IAAAA,KAAK,CAACE,IAAN,CACE,MAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,GAAG,EAAED,MAAtB;AAA8B,MAAA,MAAM,EAAEA,MAAM,KAAKN,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,MADH,CADF;AAKD;;AAED,QAAME,eAAe,GACnB,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,CAAY,KAAZ;AAAkB,IAAA,OAAO,EAAE,MAAMP,aAAa,CAAC,CAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD,CAAY,IAAZ;AACE,IAAA,OAAO,EAAE,MACPD,UAAU,GAAG,CAAb,GACIC,aAAa,CAACD,UAAU,GAAG,CAAd,CADjB,GAEIC,aAAa,CAACD,UAAD,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASGK,KATH,EAUE,MAAC,UAAD,CAAY,IAAZ;AACE,IAAA,OAAO,EAAE,MAAM;AACb,YAAMI,WAAW,GAAGT,UAAU,GAAGG,WAAjC;;AACA,UAAIM,WAAJ,EAAiB;AACf,cAAMC,QAAQ,GAAGV,UAAU,GAAG,CAA9B;AACAC,QAAAA,aAAa,CAACS,QAAD,CAAb;AACD;AACF,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAmBE,MAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,OAAO,EAAE,MAAMT,aAAa,CAACE,WAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;;AAwBA,QAAMQ,YAAY,GAAGb,cAAc,CAACc,MAAf,CAAsBC,OAAO,IAAI;AACpD,WACEA,OAAO,CAACC,EAAR,GAAa,CAACd,UAAU,GAAG,CAAd,IAAmBE,QAAhC,IACAW,OAAO,CAACC,EAAR,IAAcd,UAAU,GAAGE,QAF7B;AAID,GALoB,CAArB;AAOA,QAAMa,cAAc,GAAGJ,YAAY,CAACK,GAAb,CAAiB,CAACH,OAAD,EAAUI,GAAV,KAAkB;AACxD,WACE;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCJ,OAAO,CAACK,IAAhD,CADF,EAEE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCL,OAAO,CAACM,kBAAhD,CAFF,EAGE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,OAAO,CAACO,UAAR,GAAqBP,OAAO,CAACO,UAA7B,GAA0C,GAD7C,CAHF,EAME;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCP,OAAO,CAACQ,KAAhD,CANF,EAQE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCR,OAAO,CAACS,MAAhD,CARF,EASE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCT,OAAO,CAACU,OAAhD,CATF,EAUE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCV,OAAO,CAACW,IAAhD,CAVF,CADF;AAcD,GAfsB,CAAvB;AAiBA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AACE,IAAA,QAAQ,EAAE3B,QADZ;AAEE,IAAA,OAAO,EAAED,KAAK,CAAC6B,OAFjB;AAGE,IAAA,SAAS,EAAE7B,KAAK,CAAC8B,SAHnB;AAIE,IAAA,WAAW,EAAE3B,iBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,MAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,MAA7B;AAA8B,IAAA,UAAU,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CADF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQgB,cAAR,CAbF,CAPF,EAsBGP,eAtBH,CADF;AA0BD,CAlGD;;AAoGAb,QAAQ,CAACgC,eAAT,GAA2B,kBAAiB;AAC1C,QAAMC,GAAG,GAAG,MAAMtC,KAAK,CAACuC,GAAN,CAAU,mCAAV,CAAlB;AACA,QAAMC,SAAS,GAAG,MAAMxC,KAAK,CAACuC,GAAN,CACtB,2CADsB,CAAxB;AAGA,QAAME,UAAU,GAAG,MAAMzC,KAAK,CAACuC,GAAN,CACvB,6CADuB,CAAzB;AAGA,QAAMhC,QAAQ,GAAG,MAAM+B,GAAG,CAACI,IAA3B;AACA,QAAMP,OAAO,GAAG,MAAMK,SAAS,CAACE,IAAhC;AACA,QAAMN,SAAS,GAAG,MAAMK,UAAU,CAACC,IAAnC;AACA,SAAO;AAAEnC,IAAAA,QAAF;AAAY4B,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,GAAP;AACD,CAZD;;AAcA,eAAe/B,QAAf","sourcesContent":["import { Layout } from \"../components/Layout\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { PaymentsFilter } from \"../components/payments/Filter\";\n\nconst Payments = props => {\n  const students = props.students;\n  const [studentsFilter, setstudentsFilter] = useState(props.students);\n\n  /* This is for build Pagination of table */\n  /* Set the actual page */\n  const [pageActual, setpageActual] = useState(1);\n\n  /* Students per Page */\n  let sizePage = 2;\n\n  /* Numbers of Page */\n  let numberPages = students.length / sizePage + 1;\n\n  let items = [];\n\n  for (let number = 1; number < numberPages; number++) {\n    items.push(\n      <Pagination.Item key={number} active={number === pageActual}>\n        {number}\n      </Pagination.Item>\n    );\n  }\n\n  const paginationBasic = (\n    <Pagination>\n      <Pagination.First onClick={() => setpageActual(1)} />\n      <Pagination.Prev\n        onClick={() =>\n          pageActual > 1\n            ? setpageActual(pageActual - 1)\n            : setpageActual(pageActual)\n        }\n      />\n      {items}\n      <Pagination.Next\n        onClick={() => {\n          const canNextPage = pageActual < numberPages;\n          if (canNextPage) {\n            const nextPage = pageActual + 1;\n            setpageActual(nextPage);\n          }\n        }}\n      />\n      <Pagination.Last onClick={() => setpageActual(numberPages)} />\n    </Pagination>\n  );\n\n  const studentsShow = studentsFilter.filter(student => {\n    return (\n      student.id > (pageActual - 1) * sizePage &&\n      student.id <= pageActual * sizePage\n    );\n  });\n\n  const studentsRender = studentsShow.map((student, key) => {\n    return (\n      <tr key={key}>\n        <td className=\"d-none d-sm-table-cell\">{student.name}</td>\n        <td className=\"d-none d-sm-table-cell\">{student.paymentDescription}</td>\n        <td className=\"d-none d-sm-table-cell\">\n          {student.dues_value ? student.dues_value : \"-\"}\n        </td>\n        <td className=\"d-none d-sm-table-cell\">{student.email}</td>\n\n        <td className=\"d-none d-sm-table-cell\">{student.career}</td>\n        <td className=\"d-none d-sm-table-cell\">{student.country}</td>\n        <td className=\"d-none d-sm-table-cell\">{student.city}</td>\n      </tr>\n    );\n  });\n\n  return (\n    <Layout title=\"Payments of Students\">\n      <PaymentsFilter\n        students={students}\n        careers={props.careers}\n        countries={props.countries}\n        setstudents={setstudentsFilter}\n      />\n      <Table striped bordered hover responsive>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type Payment</th>\n            <th>Dues</th>\n            <th>Email</th>\n            <th>Career</th>\n            <th>Country</th>\n            <th>City</th>\n            <th>City</th>\n          </tr>\n        </thead>\n        <tbody>{studentsRender}</tbody>\n      </Table>\n      {paginationBasic}\n    </Layout>\n  );\n};\n\nPayments.getInitialProps = async function() {\n  const res = await axios.get(\"http://0.0.0.0:8000/api/payments/\");\n  const resCareer = await axios.get(\n    \"http://0.0.0.0:8000/api/students/careers/\"\n  );\n  const resCountry = await axios.get(\n    \"http://0.0.0.0:8000/api/students/countries/\"\n  );\n  const students = await res.data;\n  const careers = await resCareer.data;\n  const countries = await resCountry.data;\n  return { students, careers, countries };\n};\n\nexport default Payments;\n"]},"metadata":{},"sourceType":"module"}