{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/admin/Desktop/acamica/client/pages/payment/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { Layout } from \"../../components/Layout\";\nimport { isLoggedIn } from \"../../lib/isLoggedIn\";\nimport Error from \"next/error\";\nimport { paymentStudent } from \"../../lib/api\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\n\nvar Payment = function Payment(props) {\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register;\n\n  var onSubmit = function onSubmit(values) {\n    console.log(\"submit\");\n  };\n\n  var router = useRouter();\n\n  if (router.query.id) {\n    console.log(paymentStudent(router.query.id));\n  }\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, isLoggedIn() && router.query.id ? __jsx(Layout, {\n    title: \"Payment Id: \".concat(router.query.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"row formFilter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group  col-md-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"input\", {\n    name: \"name\",\n    className: \"form-control\",\n    type: \"text\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group  col-md-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Email\"), __jsx(\"input\", {\n    name: \"email\",\n    className: \"form-control\",\n    type: \"text\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"career\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Career\"), __jsx(\"select\", {\n    className: \"form-control\",\n    name: \"career\",\n    multiple: false,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"All\",\n    key: -99,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"All\"), props.careers.map(function (career) {\n    return __jsx(\"option\", {\n      value: career.description,\n      key: career.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, career.description);\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Country\"), __jsx(\"select\", {\n    className: \"form-control\",\n    name: \"country\",\n    multiple: false,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"All\",\n    key: -99,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"All\"), props.countries.map(function (country) {\n    return __jsx(\"option\", {\n      value: country.description,\n      key: country.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, country.description);\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"City\"), __jsx(\"select\", {\n    className: \"form-control\",\n    name: \"city\",\n    multiple: false,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"All\",\n    key: -99,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"All\"), props.countries.map(function (city) {\n    return __jsx(\"option\", {\n      value: country.description,\n      key: country.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, country.description);\n  }))))) : __jsx(Error, {\n    statusCode: 403,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }));\n};\n\nPayment.getInitialProps = function _callee() {\n  var resCareer, resCountry, careers, countries;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"http://0.0.0.0:8000/api/students/careers/\"));\n\n        case 2:\n          resCareer = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(\"http://0.0.0.0:8000/api/students/countries/\"));\n\n        case 5:\n          resCountry = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(resCareer.data);\n\n        case 8:\n          careers = _context.sent;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(resCountry.data);\n\n        case 11:\n          countries = _context.sent;\n          return _context.abrupt(\"return\", {\n            careers: careers,\n            countries: countries\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nPayment.getInitialProps = function _callee2() {\n  var resCareer, resCountry, careers, countries;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"http://0.0.0.0:8000/api/students/careers/\"));\n\n        case 2:\n          resCareer = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(\"http://0.0.0.0:8000/api/students/countries/\"));\n\n        case 5:\n          resCountry = _context2.sent;\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(resCareer.data);\n\n        case 8:\n          careers = _context2.sent;\n          _context2.next = 11;\n          return _regeneratorRuntime.awrap(resCountry.data);\n\n        case 11:\n          countries = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            careers: careers,\n            countries: countries\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nexport default Payment;","map":{"version":3,"sources":["/home/admin/Desktop/acamica/client/pages/payment/[id].js"],"names":["useRouter","Layout","isLoggedIn","Error","paymentStudent","axios","useForm","Payment","props","handleSubmit","register","onSubmit","values","console","log","router","query","id","careers","map","career","description","countries","country","city","getInitialProps","get","resCareer","resCountry","data"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport { Layout } from \"../../components/Layout\";\nimport { isLoggedIn } from \"../../lib/isLoggedIn\";\nimport Error from \"next/error\";\nimport { paymentStudent } from \"../../lib/api\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\n\nconst Payment = props => {\n  const { handleSubmit, register } = useForm();\n  const onSubmit = values => {\n    console.log(\"submit\");\n  };\n  const router = useRouter();\n\n  if (router.query.id) {\n    console.log(paymentStudent(router.query.id));\n  }\n\n  return (\n    <React.Fragment>\n      {isLoggedIn() && router.query.id ? (\n        <Layout title={`Payment Id: ${router.query.id}`}>\n          <form onSubmit={handleSubmit(onSubmit)} className=\"row formFilter\">\n            {/* Name */}\n            <div className=\"form-group  col-md-5\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                name=\"name\"\n                className=\"form-control\"\n                type=\"text\"\n                ref={register}\n              />\n            </div>\n\n            <div className=\"form-group  col-md-5\">\n              <label htmlFor=\"name\">Email</label>\n              <input\n                name=\"email\"\n                className=\"form-control\"\n                type=\"text\"\n                ref={register}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"career\">Career</label>\n              <select\n                className=\"form-control\"\n                name=\"career\"\n                multiple={false}\n                ref={register}\n              >\n                <option value={\"All\"} key={-99}>\n                  All\n                </option>\n                {props.careers.map(career => (\n                  <option value={career.description} key={career.id}>\n                    {career.description}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"country\">Country</label>\n              <select\n                className=\"form-control\"\n                name=\"country\"\n                multiple={false}\n                ref={register}\n              >\n                <option value={\"All\"} key={-99}>\n                  All\n                </option>\n                {props.countries.map(country => (\n                  <option value={country.description} key={country.id}>\n                    {country.description}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"city\">City</label>\n              <select\n                className=\"form-control\"\n                name=\"city\"\n                multiple={false}\n                ref={register}\n              >\n                <option value={\"All\"} key={-99}>\n                  All\n                </option>\n                {props.countries.map(city => (\n                  <option value={country.description} key={country.id}>\n                    {country.description}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </form>\n        </Layout>\n      ) : (\n        <Error statusCode={403} />\n      )}\n    </React.Fragment>\n  );\n};\n\nPayment.getInitialProps = async function() {\n  const resCareer = await axios.get(\n    \"http://0.0.0.0:8000/api/students/careers/\"\n  );\n  const resCountry = await axios.get(\n    \"http://0.0.0.0:8000/api/students/countries/\"\n  );\n  const careers = await resCareer.data;\n  const countries = await resCountry.data;\n  return { careers, countries };\n};\nPayment.getInitialProps = async function() {\n  const resCareer = await axios.get(\n    \"http://0.0.0.0:8000/api/students/careers/\"\n  );\n  const resCountry = await axios.get(\n    \"http://0.0.0.0:8000/api/students/countries/\"\n  );\n  \n  const careers = await resCareer.data;\n  const countries = await resCountry.data;\n  return { careers, countries };\n};\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}