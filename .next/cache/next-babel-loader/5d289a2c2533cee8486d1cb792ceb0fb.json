{"ast":null,"code":"var _jsxFileName = \"/home/admin/Desktop/acamica/client/components/payments/Filter.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useForm } from \"react-hook-form\";\nimport { Button, Form } from \"react-bootstrap\";\nexport const PaymentsFilter = props => {\n  const {\n    handleSubmit,\n    register\n  } = useForm();\n\n  const onSubmit = values => {\n    let studentsFilter = props.students;\n    console.log(values);\n    /* Filter by name */\n\n    if (values.name.trim() !== \"\") {\n      studentsFilter = studentsFilter.filter(student => student.name == values.name);\n    }\n\n    if (values.email.trim() !== \"\") {\n      studentsFilter = studentsFilter.filter(student => student.email == values.email);\n    }\n\n    props.setstudents(studentsFilter);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"row formFilter \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group  col-md-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"input\", {\n    name: \"name\",\n    className: \"form-control\",\n    type: \"text\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group  col-md-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Email\"), __jsx(\"input\", {\n    name: \"email\",\n    className: \"form-control\",\n    type: \"text\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"career\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Career\"), __jsx(\"select\", {\n    className: \"form-control\",\n    name: \"career\",\n    multiple: false,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.careers.map(career => __jsx(\"option\", {\n    value: career.id,\n    key: career.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, career.description)))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Country\"), __jsx(\"select\", {\n    className: \"form-control\",\n    name: \"country\",\n    multiple: false,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, props.countries.map(country => __jsx(\"option\", {\n    value: country.id,\n    key: country.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, country.description)))), __jsx(Button, {\n    type: \"submit\",\n    className: \"col-sm-12 col-lg-8 submitButtonFilter btn-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Apply Filter\"));\n};","map":{"version":3,"sources":["/home/admin/Desktop/acamica/client/components/payments/Filter.js"],"names":["useForm","Button","Form","PaymentsFilter","props","handleSubmit","register","onSubmit","values","studentsFilter","students","console","log","name","trim","filter","student","email","setstudents","careers","map","career","id","description","countries","country"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport const PaymentsFilter = props => {\n  const { handleSubmit, register } = useForm();\n  const onSubmit = values => {\n    let studentsFilter = props.students;\n    console.log(values)\n    /* Filter by name */\n    if (values.name.trim() !== \"\") {\n      studentsFilter = studentsFilter.filter(\n        student => student.name == values.name\n      );\n    }\n\n    if (values.email.trim() !== \"\") {\n      studentsFilter = studentsFilter.filter(\n        student => student.email == values.email\n      );\n    }\n\n    props.setstudents(studentsFilter);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"row formFilter \">\n      {/* Name */}\n      <div className=\"form-group  col-md-5\">\n        <label htmlFor=\"name\">Name</label>\n        <input\n          name=\"name\"\n          className=\"form-control\"\n          type=\"text\"\n          ref={register}\n        />\n      </div>\n\n      <div className=\"form-group  col-md-5\">\n        <label htmlFor=\"name\">Email</label>\n        <input\n          name=\"email\"\n          className=\"form-control\"\n          type=\"text\"\n          ref={register}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"career\">Career</label>\n        <select\n          className=\"form-control\"\n          name=\"career\"\n          multiple={false}\n          ref={register}\n        >\n          {props.careers.map(career => (\n            <option value={career.id} key={career.id}>\n              {career.description}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"country\">Country</label>\n        <select\n          className=\"form-control\"\n          name=\"country\"\n          multiple={false}\n          ref={register}\n        >\n          {props.countries.map(country => (\n            <option value={country.id} key={country.id}>\n              {country.description}\n            </option>\n          ))}\n        </select>\n      </div>\n      <Button\n        type=\"submit\"\n        className=\"col-sm-12 col-lg-8 submitButtonFilter btn-text\"\n      >\n        Apply Filter\n      </Button>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}