{"version":3,"file":"static/webpack/static/development/pages/payments.js.d173cf6b1aba31dedb35.hot-update.js","sources":["webpack:///./components/payments/Filter.js","webpack:///./pages/payments.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { Button } from \"react-bootstrap\";\nexport const PaymentsFilter = props => {\n  \n  const { handleSubmit, register } = useForm();\n  const onSubmit = values => {\n    let studentsFilter = props.students;\n  \n    /* Filter by name */\n    if (values.name.trim() !== \"\") {\n      studentsFilter = studentsFilter.filter(student =>\n        student.name.toLowerCase().includes(values.name.toLowerCase())\n      );\n    }\n\n    if (values.email.trim() !== \"\") {\n      studentsFilter = studentsFilter.filter(student =>\n        student.email.toLowerCase().includes(values.email.toLowerCase())\n      );\n    }\n\n    if (values.country.trim() !== \"\" && values.country.trim() !== \"All\") {\n      studentsFilter = studentsFilter.filter(\n        student => student.country == values.country\n      );\n    }\n\n    if (values.career.trim() !== \"\" && values.career.trim() !== \"All\") {\n      studentsFilter = studentsFilter.filter(\n        student => student.career == values.career\n      );\n    }\n\n    props.setstudents(studentsFilter);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"row formFilter \">\n      {/* Name */}\n      <div className=\"form-group  col-md-5\">\n        <label htmlFor=\"name\">Name</label>\n        <input\n          name=\"name\"\n          className=\"form-control\"\n          type=\"text\"\n          ref={register}\n        />\n      </div>\n\n      <div className=\"form-group  col-md-5\">\n        <label htmlFor=\"name\">Email</label>\n        <input\n          name=\"email\"\n          className=\"form-control\"\n          type=\"text\"\n          ref={register}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"career\">Career</label>\n        <select\n          className=\"form-control\"\n          name=\"career\"\n          multiple={false}\n          ref={register}\n        >\n          <option value={\"All\"} key={-99}>\n            All\n          </option>\n          {props.careers.map(career => (\n            <option value={career.description} key={career.id}>\n              {career.description}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"country\">Country</label>\n        <select\n          className=\"form-control\"\n          name=\"country\"\n          multiple={false}\n          ref={register}\n        >\n          <option value={\"All\"} key={-99}>\n            All\n          </option>\n          {props.countries.map(country => (\n            <option value={country.description} key={country.id}>\n              {country.description}\n            </option>\n          ))}\n        </select>\n      </div>\n      \n      <Button\n        type=\"submit\"\n        className=\"col-sm-2 col-lg-5 submitButtonFilter btn-text\"\n      >\n        Apply Filter\n      </Button>\n    </form>\n  );\n};\n","import { Layout } from \"../components/Layout\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { PaymentsFilter } from \"../components/payments/Filter\";\nimport { Button } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { PaginationTable } from \"../components/Pagination\";\nimport { isLoggedIn } from \"../lib/isLoggedIn\";\nimport Error from \"next/error\";\n\nconst Payments = props => {\n  const payments = props.payments;\n  const [paymentsFilter, setPaymentsFilter] = useState(props.payments);\n  const [pageActual, setpageActual] = useState(1);\n  const sizePage = 2;\n  const paymentsShow = paymentsFilter.filter(payment => {\n    return (\n      payment.id > (pageActual - 1) * sizePage &&\n      payment.id <= pageActual * sizePage\n    );\n  });\n\n  const paymentsRender = paymentsShow.map((payment, key) => {\n    return (\n      <tr key={key}>\n        <td className=\"d-none d-sm-table-cell\">{payment.name}</td>\n        <td className=\"d-none d-sm-table-cell\">{payment.paymentDescription}</td>\n        <td className=\"d-none d-sm-table-cell\">\n          {payment.dues_value ? payment.dues_value : \"-\"}\n        </td>\n        <td className=\"d-none d-sm-table-cell\">{payment.email}</td>\n        <td className=\"d-none d-sm-table-cell\">{payment.career}</td>\n        <td className=\"d-none d-sm-table-cell\">{payment.country}</td>\n        <td className=\"d-none d-sm-table-cell\">{payment.city}</td>\n        <td className=\"d-none d-sm-table-cell\">\n          <Link href=\"/payment/[id]\" as={`/payment/${payment.id}`}>\n            <Button>Edit Payment</Button>\n          </Link>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      {isLoggedIn() ? (\n        <Layout title=\"Payments of Students\">\n          <PaymentsFilter\n            students={payments}\n            careers={props.careers}\n            countries={props.countries}\n            setstudents={setPaymentsFilter}\n          />\n\n          <Link href=\"/payment/new\">\n            <Button>New Payment</Button>\n          </Link>\n          <Table striped bordered hover responsive>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Type Payment</th>\n                <th>Dues</th>\n                <th>Email</th>\n                <th>Career</th>\n                <th>Country</th>\n                <th>City</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>{paymentsRender}</tbody>\n          </Table>\n          <PaginationTable\n            lengthArray={paymentsFilter.length}\n            sizePage={sizePage}\n            setpageActual={setpageActual}\n            pageActual={pageActual}\n          />\n        </Layout>\n      ) : (\n        <Error statusCode={403} />\n      )}\n    </React.Fragment>\n  );\n};\n\nPayments.getInitialProps = async function() {\n  const resPayments = await axios.get(\"http://0.0.0.0:8000/api/payments/\");\n  const resCareer = await axios.get(\"http://0.0.0.0:8000/api/students/careers/\");\n  const resCountry = await axios.get(\"http://0.0.0.0:8000/api/students/countries/\");\n  const payments = await resPayments.data;\n  const careers = await resCareer.data;\n  const countries = await resCountry.data;\n  return { payments, careers, countries };\n};\n\nexport default Payments;\n"],"mappings":"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","sourceRoot":""}