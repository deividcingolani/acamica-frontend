{"ast":null,"code":"var _jsxFileName = \"/home/admin/Desktop/acamica/client/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\n\nclass BuggyCounter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      counter: 0\n    });\n\n    _defineProperty(this, \"handleClick\", () => {\n      this.setState(({\n        counter\n      }) => ({\n        counter: counter + 1\n      }));\n    });\n  }\n\n  render() {\n    if (this.state.counter === 5) {\n      // Simulate a JS error\n      throw new Error(\"I crashed!\");\n    }\n\n    return __jsx(\"h1\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.state.counter);\n  }\n\n}\n\nexport default (() => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"Click on the number to increase the counter.\"), __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"The counter is programmed to throw an error when it reaches 5.\"), __jsx(BuggyCounter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n})));","map":{"version":3,"sources":["/home/admin/Desktop/acamica/client/pages/index.js"],"names":["React","Component","BuggyCounter","counter","setState","render","state","Error","handleClick"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCAC3B;AACNE,MAAAA,OAAO,EAAE;AADH,KAD2B;;AAAA,yCAKrB,MAAM;AAClB,WAAKC,QAAL,CAAc,CAAC;AAAED,QAAAA;AAAF,OAAD,MAAkB;AAC9BA,QAAAA,OAAO,EAAEA,OAAO,GAAG;AADW,OAAlB,CAAd;AAGD,KATkC;AAAA;;AAWnCE,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWH,OAAX,KAAuB,CAA3B,EAA8B;AAC5B;AACA,YAAM,IAAII,KAAJ,CAAU,YAAV,CAAN;AACD;;AAED,WAAO;AAAI,MAAA,OAAO,EAAE,KAAKC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKF,KAAL,CAAWH,OAA3C,CAAP;AACD;;AAlBkC;;AAqBrC,gBAAe,MACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAFF,EAGE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CADF","sourcesContent":["import React, { Component } from \"react\";\n\nclass BuggyCounter extends Component {\n  state = {\n    counter: 0\n  };\n\n  handleClick = () => {\n    this.setState(({ counter }) => ({\n      counter: counter + 1\n    }));\n  };\n\n  render() {\n    if (this.state.counter === 5) {\n      // Simulate a JS error\n      throw new Error(\"I crashed!\");\n    }\n\n    return <h1 onClick={this.handleClick}>{this.state.counter}</h1>;\n  }\n}\n\nexport default () => (\n  <div>\n    <p>Click on the number to increase the counter.</p>\n    <p>The counter is programmed to throw an error when it reaches 5.</p>\n    <BuggyCounter />\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}