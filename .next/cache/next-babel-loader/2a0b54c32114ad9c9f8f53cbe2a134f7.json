{"ast":null,"code":"var _jsxFileName = \"/home/admin/Desktop/acamica/client/pages/payments.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from \"../components/Layout\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { PaymentsFilter } from \"../components/payments/Filter\";\n\nconst Payments = props => {\n  const students = props.students;\n  const {\n    0: studentsFilter,\n    1: setstudentsFilter\n  } = useState(props.students);\n  /* This is for build Pagination of table */\n\n  /* Set the actual page */\n\n  const {\n    0: pageActual,\n    1: setpageActual\n  } = useState(1);\n  /* Students per Page */\n\n  let studentsPage = 1;\n  /* Numbers of Page */\n\n  let numberPages = students.length / studentsPage;\n  console.log(numberPages);\n  let items = [];\n\n  for (let number = 1; number <= numberPages; number++) {\n    items.push(__jsx(Pagination.Item, {\n      key: number,\n      active: number === pageActual,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, number));\n  }\n\n  const paginationBasic = __jsx(Pagination, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Pagination.First, {\n    onClick: () => setpageActual(1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), __jsx(Pagination.Prev, {\n    onClick: () => pageActual > 1 ? setpageActual(pageActual - 1) : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), items, __jsx(Pagination.Next, {\n    onClick: () => pageActual < numberPages ? setpageActual(pageActual + 1) : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(Pagination.Last, {\n    onClick: () => setpageActual(numberPages),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n\n  const studentsShow = studentsFilter.filter((student, key) => studentsPage * pageActual - 1 <= key <= studentsPage * pageActual - 1);\n  return __jsx(Layout, {\n    title: \"Payments of Students\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(PaymentsFilter, {\n    students: students,\n    careers: props.careers,\n    countries: props.countries,\n    setstudents: setstudentsFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Type Payment\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Dues\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Email\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Career\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Country\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"City\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, studentsFilter.map(student => {\n    return __jsx(\"tr\", {\n      key: student.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, student.name), __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, student.paymentDescription), __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, student.dues_value ? student.dues_value : \"-\"), __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, student.email), __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, student.career), __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, student.country), __jsx(\"td\", {\n      className: \"d-none d-sm-table-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, student.city));\n  }))), paginationBasic);\n};\n\nPayments.getInitialProps = async function () {\n  const res = await axios.get(\"http://0.0.0.0:8000/api/payments/\");\n  const resCareer = await axios.get(\"http://0.0.0.0:8000/api/students/careers/\");\n  const resCountry = await axios.get(\"http://0.0.0.0:8000/api/students/countries/\");\n  const students = await res.data;\n  const careers = await resCareer.data;\n  const countries = await resCountry.data;\n  return {\n    students,\n    careers,\n    countries\n  };\n};\n\nexport default Payments;","map":{"version":3,"sources":["/home/admin/Desktop/acamica/client/pages/payments.js"],"names":["Layout","axios","useState","Table","Pagination","PaymentsFilter","Payments","props","students","studentsFilter","setstudentsFilter","pageActual","setpageActual","studentsPage","numberPages","length","console","log","items","number","push","paginationBasic","studentsShow","filter","student","key","careers","countries","map","id","name","paymentDescription","dues_value","email","career","country","city","getInitialProps","res","get","resCareer","resCountry","data"],"mappings":"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","sourcesContent":["import { Layout } from \"../components/Layout\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { PaymentsFilter } from \"../components/payments/Filter\";\n\nconst Payments = props => {\n  const students = props.students;\n  const [studentsFilter, setstudentsFilter] = useState(props.students);\n\n  /* This is for build Pagination of table */\n  /* Set the actual page */\n  const [pageActual, setpageActual] = useState(1);\n\n  /* Students per Page */\n  let studentsPage = 1;\n\n  /* Numbers of Page */\n  let numberPages = students.length / studentsPage;\n  console.log(numberPages);\n\n  let items = [];\n\n  for (let number = 1; number <= numberPages; number++) {\n    items.push(\n      <Pagination.Item key={number} active={number === pageActual}>\n        {number}\n      </Pagination.Item>\n    );\n  }\n\n  const paginationBasic = (\n    <Pagination>\n      <Pagination.First onClick={() => setpageActual(1)} />\n      <Pagination.Prev\n        onClick={() => (pageActual > 1 ? setpageActual(pageActual - 1) : \"\")}\n      />\n      {items}\n      <Pagination.Next\n        onClick={() =>\n          pageActual < numberPages ? setpageActual(pageActual + 1) : \"\"\n        }\n      />\n      <Pagination.Last onClick={() => setpageActual(numberPages)} />\n    </Pagination>\n  );\n\n  const studentsShow = studentsFilter.filter(\n    (student, key) =>\n      studentsPage * pageActual - 1 <= key <= studentsPage * pageActual - 1\n  );\n\n  return (\n    <Layout title=\"Payments of Students\">\n      <PaymentsFilter\n        students={students}\n        careers={props.careers}\n        countries={props.countries}\n        setstudents={setstudentsFilter}\n      />\n      <Table striped bordered hover responsive>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type Payment</th>\n            <th>Dues</th>\n            <th>Email</th>\n            <th>Career</th>\n            <th>Country</th>\n            <th>City</th>\n          </tr>\n        </thead>\n        <tbody>\n          {studentsFilter.map(student => {\n            return (\n              <tr key={student.id}>\n                <td className=\"d-none d-sm-table-cell\">{student.name}</td>\n                <td className=\"d-none d-sm-table-cell\">\n                  {student.paymentDescription}\n                </td>\n                <td className=\"d-none d-sm-table-cell\">\n                  {student.dues_value ? student.dues_value : \"-\"}\n                </td>\n                <td className=\"d-none d-sm-table-cell\">{student.email}</td>\n\n                <td className=\"d-none d-sm-table-cell\">{student.career}</td>\n                <td className=\"d-none d-sm-table-cell\">{student.country}</td>\n                <td className=\"d-none d-sm-table-cell\">{student.city}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      {paginationBasic}\n    </Layout>\n  );\n};\n\nPayments.getInitialProps = async function() {\n  const res = await axios.get(\"http://0.0.0.0:8000/api/payments/\");\n  const resCareer = await axios.get(\n    \"http://0.0.0.0:8000/api/students/careers/\"\n  );\n  const resCountry = await axios.get(\n    \"http://0.0.0.0:8000/api/students/countries/\"\n  );\n  const students = await res.data;\n  const careers = await resCareer.data;\n  const countries = await resCountry.data;\n  return { students, careers, countries };\n};\n\nexport default Payments;\n"]},"metadata":{},"sourceType":"module"}