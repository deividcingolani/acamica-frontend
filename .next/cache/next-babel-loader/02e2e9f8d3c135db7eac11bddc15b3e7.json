{"ast":null,"code":"var _jsxFileName = \"/home/admin/Desktop/acamica/client/pages/payment/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { Layout } from \"../../components/Layout\";\nimport { isLoggedIn } from \"../../lib/isLoggedIn\";\nimport Error from \"next/error\";\nimport { paymentStudent } from \"../../lib/api\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\n\nconst Payment = props => {\n  const {\n    handleSubmit,\n    register\n  } = useForm();\n  const {\n    countries,\n    careers\n  } = props;\n\n  const onSubmit = values => {\n    console.log(\"submit\");\n  };\n\n  const router = useRouter();\n\n  if (router.query.id) {\n    console.log(paymentStudent(router.query.id));\n  }\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, isLoggedIn() && router.query.id ? __jsx(Layout, {\n    title: `Payment Id: ${router.query.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"row formFilter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group  col-md-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"input\", {\n    name: \"name\",\n    className: \"form-control\",\n    type: \"text\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group  col-md-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Email\"), __jsx(\"input\", {\n    name: \"email\",\n    className: \"form-control\",\n    type: \"text\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"career\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Career\"), __jsx(\"select\", {\n    className: \"form-control\",\n    name: \"career\",\n    multiple: false,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"All\",\n    key: -99,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"All\"), props.careers.map(career => __jsx(\"option\", {\n    value: career.description,\n    key: career.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, career.description)))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Country\"), __jsx(\"select\", {\n    className: \"form-control\",\n    name: \"country\",\n    multiple: false,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"All\",\n    key: -99,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"All\"), countries.map(country => __jsx(\"option\", {\n    value: country.description,\n    key: country.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, country.description)))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"City\"), __jsx(\"select\", {\n    className: \"form-control\",\n    name: \"city\",\n    multiple: false,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"All\",\n    key: -99,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"All\"), cities.map(city => __jsx(\"option\", {\n    value: city.description,\n    key: city.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, city.description)))))) : __jsx(Error, {\n    statusCode: 403,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }));\n};\n\nPayment.getInitialProps = async function () {\n  const resCareer = await axios.get(\"http://0.0.0.0:8000/api/students/careers/\");\n  const resCountry = await axios.get(\"http://0.0.0.0:8000/api/students/countries/\");\n  const careers = await resCareer.data;\n  const countries = await resCountry.data;\n  return {\n    careers,\n    countries\n  };\n};\n\nPayment.getInitialProps = async function () {\n  const resCareer = await axios.get(\"http://0.0.0.0:8000/api/students/careers/\");\n  const resCountry = await axios.get(\"http://0.0.0.0:8000/api/students/countries/\");\n  const careers = await resCareer.data;\n  const countries = await resCountry.data;\n  return {\n    careers,\n    countries\n  };\n};\n\nexport default Payment;","map":{"version":3,"sources":["/home/admin/Desktop/acamica/client/pages/payment/[id].js"],"names":["useRouter","Layout","isLoggedIn","Error","paymentStudent","axios","useForm","Payment","props","handleSubmit","register","countries","careers","onSubmit","values","console","log","router","query","id","map","career","description","country","cities","city","getInitialProps","resCareer","get","resCountry","data"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport { Layout } from \"../../components/Layout\";\nimport { isLoggedIn } from \"../../lib/isLoggedIn\";\nimport Error from \"next/error\";\nimport { paymentStudent } from \"../../lib/api\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\n\nconst Payment = props => {\n  const { handleSubmit, register } = useForm();\n  const { countries, careers } = props;\n  \n  const onSubmit = values => {\n    console.log(\"submit\");\n  };\n  const router = useRouter();\n\n  if (router.query.id) {\n    console.log(paymentStudent(router.query.id));\n  }\n\n  return (\n    <React.Fragment>\n      {isLoggedIn() && router.query.id ? (\n        <Layout title={`Payment Id: ${router.query.id}`}>\n          <form onSubmit={handleSubmit(onSubmit)} className=\"row formFilter\">\n            {/* Name */}\n            <div className=\"form-group  col-md-5\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                name=\"name\"\n                className=\"form-control\"\n                type=\"text\"\n                ref={register}\n              />\n            </div>\n\n            <div className=\"form-group  col-md-5\">\n              <label htmlFor=\"name\">Email</label>\n              <input\n                name=\"email\"\n                className=\"form-control\"\n                type=\"text\"\n                ref={register}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"career\">Career</label>\n              <select\n                className=\"form-control\"\n                name=\"career\"\n                multiple={false}\n                ref={register}\n              >\n                <option value={\"All\"} key={-99}>\n                  All\n                </option>\n                {props.careers.map(career => (\n                  <option value={career.description} key={career.id}>\n                    {career.description}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"country\">Country</label>\n              <select\n                className=\"form-control\"\n                name=\"country\"\n                multiple={false}\n                ref={register}\n              >\n                <option value={\"All\"} key={-99}>\n                  All\n                </option>\n                {countries.map(country => (\n                  <option value={country.description} key={country.id}>\n                    {country.description}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"city\">City</label>\n              <select\n                className=\"form-control\"\n                name=\"city\"\n                multiple={false}\n                ref={register}\n              >\n                <option value={\"All\"} key={-99}>\n                  All\n                </option>\n                {cities.map(city => (\n                  <option value={city.description} key={city.id}>\n                    {city.description}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </form>\n        </Layout>\n      ) : (\n        <Error statusCode={403} />\n      )}\n    </React.Fragment>\n  );\n};\n\nPayment.getInitialProps = async function() {\n  const resCareer = await axios.get(\n    \"http://0.0.0.0:8000/api/students/careers/\"\n  );\n  const resCountry = await axios.get(\n    \"http://0.0.0.0:8000/api/students/countries/\"\n  );\n  const careers = await resCareer.data;\n  const countries = await resCountry.data;\n  return { careers, countries };\n};\nPayment.getInitialProps = async function() {\n  const resCareer = await axios.get(\n    \"http://0.0.0.0:8000/api/students/careers/\"\n  );\n  const resCountry = await axios.get(\n    \"http://0.0.0.0:8000/api/students/countries/\"\n  );\n\n  const careers = await resCareer.data;\n  const countries = await resCountry.data;\n  return { careers, countries };\n};\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}