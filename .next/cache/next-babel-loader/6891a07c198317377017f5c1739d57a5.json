{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/admin/Desktop/acamica/client/components/payments/Filter.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"react-bootstrap\";\n\nvar PaymentsFilter = function PaymentsFilter(props) {\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register;\n\n  var onSubmit = function onSubmit(values) {\n    var studentsFilter = props.students;\n    /* Filter by name */\n\n    if (values.name.trim() !== \"\") {\n      studentsFilter = studentsFilter.filter(function (student) {\n        return student.name.toLowerCase().includes(values.name.toLowerCase());\n      });\n    }\n\n    if (values.email.trim() !== \"\") {\n      studentsFilter = studentsFilter.filter(function (student) {\n        return student.email.toLowerCase().includes(values.email.toLowerCase());\n      });\n    }\n\n    if (values.country.trim() !== \"\" && values.country.trim() !== \"All\") {\n      studentsFilter = studentsFilter.filter(function (student) {\n        return student.country == values.country;\n      });\n    }\n\n    if (values.career.trim() !== \"\" && values.career.trim() !== \"All\") {\n      studentsFilter = studentsFilter.filter(function (student) {\n        return student.career == values.career;\n      });\n    }\n\n    props.setstudents(studentsFilter);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"row formFilter \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group  col-md-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"input\", {\n    name: \"name\",\n    className: \"form-control\",\n    type: \"text\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group  col-md-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Email\"), __jsx(\"input\", {\n    name: \"email\",\n    className: \"form-control\",\n    type: \"text\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"career\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Career\"), __jsx(\"select\", {\n    className: \"form-control\",\n    name: \"career\",\n    multiple: false,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"All\",\n    key: -99,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"All\"), careers.map(function (career) {\n    return __jsx(\"option\", {\n      value: career.description,\n      key: career.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, career.description);\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Country\"), __jsx(\"select\", {\n    className: \"form-control\",\n    name: \"country\",\n    multiple: false,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"All\",\n    key: -99,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"All\"), countries.map(function (country) {\n    return __jsx(\"option\", {\n      value: country.description,\n      key: country.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, country.description);\n  }))), __jsx(Button, {\n    type: \"submit\",\n    className: \"col-sm-2 col-lg-5 submitButtonFilter btn-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Apply Filter\"));\n};\n\nPaymentsFilter.getInitialProps = function _callee() {\n  var resCareer, resCountry, careers, countries;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"http://0.0.0.0:8000/api/students/careers/\"));\n\n        case 2:\n          resCareer = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(\"http://0.0.0.0:8000/api/students/countries/\"));\n\n        case 5:\n          resCountry = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(resCareer.data);\n\n        case 8:\n          careers = _context.sent;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(resCountry.data);\n\n        case 11:\n          countries = _context.sent;\n          return _context.abrupt(\"return\", {\n            careers: careers,\n            countries: countries\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default PaymentsFilter;","map":{"version":3,"sources":["/home/admin/Desktop/acamica/client/components/payments/Filter.js"],"names":["useForm","Button","PaymentsFilter","props","handleSubmit","register","onSubmit","values","studentsFilter","students","name","trim","filter","student","toLowerCase","includes","email","country","career","setstudents","careers","map","description","id","countries","getInitialProps","axios","get","resCareer","resCountry","data"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { Button } from \"react-bootstrap\";\n\nconst PaymentsFilter = props => {\n  const { handleSubmit, register } = useForm();\n  const onSubmit = values => {\n    let studentsFilter = props.students;\n\n    /* Filter by name */\n    if (values.name.trim() !== \"\") {\n      studentsFilter = studentsFilter.filter(student =>\n        student.name.toLowerCase().includes(values.name.toLowerCase())\n      );\n    }\n\n    if (values.email.trim() !== \"\") {\n      studentsFilter = studentsFilter.filter(student =>\n        student.email.toLowerCase().includes(values.email.toLowerCase())\n      );\n    }\n\n    if (values.country.trim() !== \"\" && values.country.trim() !== \"All\") {\n      studentsFilter = studentsFilter.filter(\n        student => student.country == values.country\n      );\n    }\n\n    if (values.career.trim() !== \"\" && values.career.trim() !== \"All\") {\n      studentsFilter = studentsFilter.filter(\n        student => student.career == values.career\n      );\n    }\n\n    props.setstudents(studentsFilter);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"row formFilter \">\n      {/* Name */}\n      <div className=\"form-group  col-md-5\">\n        <label htmlFor=\"name\">Name</label>\n        <input\n          name=\"name\"\n          className=\"form-control\"\n          type=\"text\"\n          ref={register}\n        />\n      </div>\n\n      <div className=\"form-group  col-md-5\">\n        <label htmlFor=\"name\">Email</label>\n        <input\n          name=\"email\"\n          className=\"form-control\"\n          type=\"text\"\n          ref={register}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"career\">Career</label>\n        <select\n          className=\"form-control\"\n          name=\"career\"\n          multiple={false}\n          ref={register}\n        >\n          <option value={\"All\"} key={-99}>\n            All\n          </option>\n          {careers.map(career => (\n            <option value={career.description} key={career.id}>\n              {career.description}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"country\">Country</label>\n        <select\n          className=\"form-control\"\n          name=\"country\"\n          multiple={false}\n          ref={register}\n        >\n          <option value={\"All\"} key={-99}>\n            All\n          </option>\n          {countries.map(country => (\n            <option value={country.description} key={country.id}>\n              {country.description}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <Button\n        type=\"submit\"\n        className=\"col-sm-2 col-lg-5 submitButtonFilter btn-text\"\n      >\n        Apply Filter\n      </Button>\n    </form>\n  );\n};\n\nPaymentsFilter.getInitialProps = async function() {\n  const resCareer = await axios.get(\n    \"http://0.0.0.0:8000/api/students/careers/\"\n  );\n  const resCountry = await axios.get(\n    \"http://0.0.0.0:8000/api/students/countries/\"\n  );\n\n  const careers = await resCareer.data;\n  const countries = await resCountry.data;\n  return { careers, countries };\n};\n\nexport default PaymentsFilter;\n"]},"metadata":{},"sourceType":"module"}